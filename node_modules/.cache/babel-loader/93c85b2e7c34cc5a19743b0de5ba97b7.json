{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Documents\\\\XpandITChallenge\\\\xpandit-frontend\\\\src\\\\component\\\\MoviesTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { Table, Container } from 'react-bootstrap';\nimport { AiFillEye, AiFillEdit, AiFillDelete } from 'react-icons/ai';\nimport InfiniteScroll from './InfiniteScroll';\nimport { BASE_API } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoviesTable = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(0);\n  const [size, setSize] = useState(10);\n  const [loading, setLoading] = useState(false);\n  const [last, setLast] = useState(false);\n  const [show, setShow] = useState(false);\n  const hasMoreData = !last;\n\n  const loadMoreNumbers = () => {\n    setLoading(true);\n    axios.get(BASE_API, {\n      params: {\n        \"pageSize\": size,\n        \"pageNumber\": page\n      }\n    }).then(res => {\n      setPage(page + 1);\n      setMovies([...movies, ...res.data.content]);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"tableFixHead\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      hasMoreData: hasMoreData,\n      isLoading: loading,\n      onBottomHit: loadMoreNumbers,\n      loadOnMount: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"RANK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TITLE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"YEAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"RATING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"REVENUE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(movie.date).getFullYear()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", movie.revenue.toLocaleString('en-US', {\n                maximumFractionDigits: 2\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(AiFillEye, {\n                size: 25\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(AiFillEdit, {\n                size: 25\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 48\n              }, this), \" \", /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                size: 25\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoviesTable, \"Yl3w3Ess/fl/C892Uu/CsYDkdVI=\");\n\n_c = MoviesTable;\nexport default MoviesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesTable\");","map":{"version":3,"names":["React","useState","axios","Table","Container","AiFillEye","AiFillEdit","AiFillDelete","InfiniteScroll","BASE_API","MoviesTable","movies","setMovies","page","setPage","size","setSize","loading","setLoading","last","setLast","show","setShow","hasMoreData","loadMoreNumbers","get","params","then","res","data","content","map","movie","index","title","Date","date","getFullYear","rating","revenue","toLocaleString","maximumFractionDigits"],"sources":["C:/Users/Bruno/Documents/XpandITChallenge/xpandit-frontend/src/component/MoviesTable.tsx"],"sourcesContent":["import React, {useEffect, useState, useRef, useMemo, Ref} from 'react';\r\nimport axios from \"axios\";\r\nimport {Table, Container} from 'react-bootstrap';\r\nimport { MovieDto } from '../model';\r\nimport { AiFillEye, AiFillEdit, AiFillDelete } from 'react-icons/ai';\r\nimport InfiniteScroll from './InfiniteScroll';\r\nimport { BASE_API } from '../constants';\r\n\r\nconst MoviesTable: React.FC = () => {\r\n    const [movies, setMovies] = useState<MovieDto[]>([])\r\n    const [page, setPage] = useState<number>(0)\r\n    const [size, setSize] = useState<number>(10)\r\n    const [loading, setLoading] = useState(false);\r\n    const [last, setLast] = useState(false)\r\n    const [show, setShow] = useState(false);\r\n\r\n    const hasMoreData = !last;\r\n\r\n    const loadMoreNumbers = () => {\r\n        setLoading(true);\r\n            axios.get(BASE_API, {params: {\"pageSize\" : size, \"pageNumber\": page}}).then(res =>{\r\n                setPage(page+1)\r\n                setMovies([...movies, ...res.data.content]);\r\n                setLoading(false);\r\n              })\r\n    };\r\n\r\n  return (\r\n    <Container className='tableFixHead'>\r\n        <InfiniteScroll\r\n            hasMoreData={hasMoreData}\r\n            isLoading={loading}\r\n            onBottomHit={loadMoreNumbers}\r\n            loadOnMount={true}\r\n        >\r\n            <Table>\r\n                <thead>\r\n                <tr>\r\n                    <th>RANK</th>\r\n                    <th>TITLE</th>\r\n                    <th>YEAR</th>\r\n                    <th>RATING</th>\r\n                    <th>REVENUE</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {movies.map((movie, index) =>(\r\n                    <tr key={index}>\r\n                    <td>{index+1}</td>\r\n                    <td>{movie.title}</td>\r\n                    <td>{new Date(movie.date).getFullYear()}</td>\r\n                    <td>{movie.rating}</td>\r\n                    <td>${movie.revenue.toLocaleString('en-US', {maximumFractionDigits:2})}</td>\r\n                    <td><AiFillEye size={25}/> <AiFillEdit size={25}/> <AiFillDelete size={25}/></td>\r\n                    </tr>\r\n                )\r\n                )}\r\n                </tbody>\r\n            </Table>\r\n        </InfiniteScroll>\r\n      </Container>\r\n  )\r\n}\r\n\r\nexport default MoviesTable"],"mappings":"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"},"metadata":{},"sourceType":"module"}