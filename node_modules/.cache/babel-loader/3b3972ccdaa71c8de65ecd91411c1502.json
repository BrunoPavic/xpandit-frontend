{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Documents\\\\XpandITChallenge\\\\xpandit-frontend\\\\src\\\\component\\\\InfiniteScroll.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction isBottom(ref) {\n  if (!ref.current) {\n    return false;\n  }\n\n  return ref.current.getBoundingClientRect().bottom <= window.innerHeight;\n}\n\nconst InfiniteScroll = _ref => {\n  _s();\n\n  let {\n    onBottomHit,\n    isLoading,\n    hasMoreData,\n    loadOnMount,\n    children\n  } = _ref;\n  const [initialLoad, setInitialLoad] = useState(true);\n  const contentRef = useRef(null);\n  useEffect(() => {\n    if (loadOnMount && initialLoad) {\n      onBottomHit();\n      setInitialLoad(false);\n    }\n  }, [onBottomHit, loadOnMount, initialLoad]);\n  useEffect(() => {\n    var _contentRef$current, _contentRef$current2;\n\n    console.log(\"prvi \" + window.visualViewport.height);\n    console.log(\"drugi \" + ((_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.scrollHeight));\n    if (window.visualViewport.height < ((_contentRef$current2 = contentRef.current) === null || _contentRef$current2 === void 0 ? void 0 : _contentRef$current2.scrollHeight) && !isLoading && hasMoreData) onBottomHit();\n  }, [onBottomHit, isLoading, hasMoreData]);\n  useEffect(() => {\n    const onScroll = () => {\n      if (!isLoading && hasMoreData && isBottom(contentRef)) {\n        onBottomHit();\n      }\n    };\n\n    document.addEventListener('scroll', onScroll);\n    return () => document.removeEventListener('scroll', onScroll);\n  }, [onBottomHit, isLoading, hasMoreData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: contentRef,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n\n_s(InfiniteScroll, \"9q0chGpuOCF86sEfiU8jFBew1UU=\");\n\n_c = InfiniteScroll;\nexport default InfiniteScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfiniteScroll\");","map":{"version":3,"names":["React","useEffect","useState","useRef","isBottom","ref","current","getBoundingClientRect","bottom","window","innerHeight","InfiniteScroll","onBottomHit","isLoading","hasMoreData","loadOnMount","children","initialLoad","setInitialLoad","contentRef","console","log","visualViewport","height","scrollHeight","onScroll","document","addEventListener","removeEventListener"],"sources":["C:/Users/Bruno/Documents/XpandITChallenge/xpandit-frontend/src/component/InfiniteScroll.tsx"],"sourcesContent":["import React, {useEffect, useState, useRef, useMemo, Ref} from 'react';\r\n\r\ntype Props = {\r\n    onBottomHit: () => void;\r\n    isLoading: boolean;\r\n    hasMoreData: boolean;\r\n    loadOnMount: boolean;\r\n    children: any;\r\n  };\r\n  \r\n  function isBottom(ref: React.RefObject<HTMLDivElement>) {\r\n    if (!ref.current) {\r\n      return false;\r\n    }\r\n    return ref.current.getBoundingClientRect().bottom <= window.innerHeight;\r\n  }\r\n  \r\n  const InfiniteScroll: React.FC<Props> = ({\r\n    onBottomHit,\r\n    isLoading,\r\n    hasMoreData,\r\n    loadOnMount,\r\n    children\r\n  }) => {\r\n    const [initialLoad, setInitialLoad] = useState(true);\r\n    const contentRef = useRef<HTMLDivElement>(null);\r\n  \r\n    useEffect(() => {\r\n      if (loadOnMount && initialLoad) {\r\n        onBottomHit();\r\n        setInitialLoad(false);\r\n      }\r\n    }, [onBottomHit, loadOnMount, initialLoad]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"prvi \" + window.visualViewport!.height)\r\n        console.log(\"drugi \" + contentRef.current?.scrollHeight!)\r\n      if((window.visualViewport!.height < contentRef.current?.scrollHeight!) && !isLoading && hasMoreData)\r\n        onBottomHit();\r\n    }, [onBottomHit, isLoading, hasMoreData])\r\n    \r\n  \r\n    useEffect(() => {\r\n      const onScroll = () => {\r\n        if (!isLoading && hasMoreData && isBottom(contentRef)) {\r\n          onBottomHit();\r\n        }\r\n      };\r\n      document.addEventListener('scroll', onScroll);\r\n      return () => document.removeEventListener('scroll', onScroll);\r\n    }, [onBottomHit, isLoading, hasMoreData]);\r\n  \r\n    return <div ref={contentRef}>{children}</div>;\r\n  };\r\n\r\n  export default InfiniteScroll;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAA+D,OAA/D;;;AAUE,SAASC,QAAT,CAAkBC,GAAlB,EAAwD;EACtD,IAAI,CAACA,GAAG,CAACC,OAAT,EAAkB;IAChB,OAAO,KAAP;EACD;;EACD,OAAOD,GAAG,CAACC,OAAJ,CAAYC,qBAAZ,GAAoCC,MAApC,IAA8CC,MAAM,CAACC,WAA5D;AACD;;AAED,MAAMC,cAA+B,GAAG,QAMlC;EAAA;;EAAA,IANmC;IACvCC,WADuC;IAEvCC,SAFuC;IAGvCC,WAHuC;IAIvCC,WAJuC;IAKvCC;EALuC,CAMnC;EACJ,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAMiB,UAAU,GAAGhB,MAAM,CAAiB,IAAjB,CAAzB;EAEAF,SAAS,CAAC,MAAM;IACd,IAAIc,WAAW,IAAIE,WAAnB,EAAgC;MAC9BL,WAAW;MACXM,cAAc,CAAC,KAAD,CAAd;IACD;EACF,CALQ,EAKN,CAACN,WAAD,EAAcG,WAAd,EAA2BE,WAA3B,CALM,CAAT;EAOAhB,SAAS,CAAC,MAAM;IAAA;;IACZmB,OAAO,CAACC,GAAR,CAAY,UAAUZ,MAAM,CAACa,cAAP,CAAuBC,MAA7C;IACAH,OAAO,CAACC,GAAR,CAAY,mCAAWF,UAAU,CAACb,OAAtB,wDAAW,oBAAoBkB,YAA/B,CAAZ;IACF,IAAIf,MAAM,CAACa,cAAP,CAAuBC,MAAvB,4BAAgCJ,UAAU,CAACb,OAA3C,yDAAgC,qBAAoBkB,YAApD,CAAD,IAAuE,CAACX,SAAxE,IAAqFC,WAAxF,EACEF,WAAW;EACd,CALQ,EAKN,CAACA,WAAD,EAAcC,SAAd,EAAyBC,WAAzB,CALM,CAAT;EAQAb,SAAS,CAAC,MAAM;IACd,MAAMwB,QAAQ,GAAG,MAAM;MACrB,IAAI,CAACZ,SAAD,IAAcC,WAAd,IAA6BV,QAAQ,CAACe,UAAD,CAAzC,EAAuD;QACrDP,WAAW;MACZ;IACF,CAJD;;IAKAc,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoCF,QAApC;IACA,OAAO,MAAMC,QAAQ,CAACE,mBAAT,CAA6B,QAA7B,EAAuCH,QAAvC,CAAb;EACD,CARQ,EAQN,CAACb,WAAD,EAAcC,SAAd,EAAyBC,WAAzB,CARM,CAAT;EAUA,oBAAO;IAAK,GAAG,EAAEK,UAAV;IAAA,UAAuBH;EAAvB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CApCD;;GAAML,c;;KAAAA,c;AAsCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}